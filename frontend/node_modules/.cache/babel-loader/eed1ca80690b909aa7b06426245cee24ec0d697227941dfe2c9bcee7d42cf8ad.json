{"ast":null,"code":"var _jsxFileName = \"/Users/vishvasshiyam/Documents/Neural network/frontend/src/components/PredictionForm.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Box, Button, MenuItem, TextField, Typography } from \"@mui/material\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { keyframes } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst circuits = [\"Melbourne\", \"Shanghai\", \"Suzuka\", \"Sakhir\", \"Jeddah\", \"Miami\", \"Imola\", \"Monte Carlo\", \"Barcelona\", \"Montreal\", \"Spielberg\", \"Silverstone\", \"Spa-Francorchamps\", \"Budapest\", \"Zandvoort\", \"Monza\", \"Baku\", \"Singapore\", \"Austin\", \"Mexico City\", \"Sao Paulo\", \"Las Vegas\", \"Lusail\", \"Yas Marina\"];\nconst chevronSlide = keyframes`\n  from { transform: translateX(-12px); opacity: 0; }\n  to { transform: translateX(0); opacity: 1; }\n`;\nconst PredictionForm = ({\n  onSubmit,\n  loading\n}) => {\n  _s();\n  const {\n    control,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      circuit: \"\"\n    }\n  });\n  const onFormSubmit = data => {\n    onSubmit(data);\n  };\n  const [hover, setHover] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onFormSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"Select Track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"circuit\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"Circuit\",\n          fullWidth: true,\n          required: true,\n          ...field,\n          children: circuits.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: c,\n            children: c\n          }, c, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      disabled: loading,\n      size: \"large\",\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        fontSize: 18,\n        letterSpacing: 1,\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n      children: [loading ? \"Predicting...\" : \"Predict Top 5\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inline-flex',\n          alignItems: 'center',\n          marginLeft: 8,\n          animation: hover && !loading ? `${chevronSlide} 0.3s ease` : undefined,\n          opacity: hover && !loading ? 1 : 0,\n          transition: 'opacity 0.2s'\n        },\n        children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionForm, \"QJWF8EPU3b7n7W4juUT9ni8dIpY=\", false, function () {\n  return [useForm];\n});\n_c = PredictionForm;\nexport default PredictionForm;\nvar _c;\n$RefreshReg$(_c, \"PredictionForm\");","map":{"version":3,"names":["React","useForm","Controller","Box","Button","MenuItem","TextField","Typography","ChevronRightIcon","keyframes","jsxDEV","_jsxDEV","circuits","chevronSlide","PredictionForm","onSubmit","loading","_s","control","handleSubmit","defaultValues","circuit","onFormSubmit","data","hover","setHover","useState","children","mb","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","name","render","field","select","label","fullWidth","required","map","c","value","type","color","disabled","size","sx","display","alignItems","justifyContent","fontWeight","fontSize","letterSpacing","position","overflow","onMouseEnter","onMouseLeave","style","marginLeft","animation","undefined","opacity","transition","_c","$RefreshReg$"],"sources":["/Users/vishvasshiyam/Documents/Neural network/frontend/src/components/PredictionForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Box, Button, MenuItem, TextField, Typography } from \"@mui/material\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { keyframes } from \"@emotion/react\";\n\nconst circuits = [\n  \"Melbourne\",\n  \"Shanghai\",\n  \"Suzuka\",\n  \"Sakhir\",\n  \"Jeddah\",\n  \"Miami\",\n  \"Imola\",\n  \"Monte Carlo\",\n  \"Barcelona\",\n  \"Montreal\",\n  \"Spielberg\",\n  \"Silverstone\",\n  \"Spa-Francorchamps\",\n  \"Budapest\",\n  \"Zandvoort\",\n  \"Monza\",\n  \"Baku\",\n  \"Singapore\",\n  \"Austin\",\n  \"Mexico City\",\n  \"Sao Paulo\",\n  \"Las Vegas\",\n  \"Lusail\",\n  \"Yas Marina\"\n];\n\nconst chevronSlide = keyframes`\n  from { transform: translateX(-12px); opacity: 0; }\n  to { transform: translateX(0); opacity: 1; }\n`;\n\nexport type PredictionFormData = {\n  circuit: string;\n};\n\ninterface PredictionFormProps {\n  onSubmit: (formData: any) => void;\n  loading: boolean;\n}\n\nconst PredictionForm: React.FC<PredictionFormProps> = ({ onSubmit, loading }) => {\n  const { control, handleSubmit } = useForm<PredictionFormData>({\n    defaultValues: { circuit: \"\" },\n  });\n\n  const onFormSubmit = (data: any) => {\n    onSubmit(data);\n  };\n\n  const [hover, setHover] = React.useState(false);\n\n  return (\n    <form onSubmit={handleSubmit(onFormSubmit)}>\n      <Box mb={2}>\n        <Typography variant=\"subtitle2\" gutterBottom>\n          Select Track\n        </Typography>\n        <Controller\n          name=\"circuit\"\n          control={control}\n          render={({ field }) => (\n            <TextField select label=\"Circuit\" fullWidth required {...field}>\n              {circuits.map((c) => (\n                <MenuItem key={c} value={c}>\n                  {c}\n                </MenuItem>\n              ))}\n            </TextField>\n          )}\n        />\n      </Box>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        disabled={loading}\n        size=\"large\"\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontWeight: 700,\n          fontSize: 18,\n          letterSpacing: 1,\n          position: 'relative',\n          overflow: 'hidden',\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        {loading ? \"Predicting...\" : \"Predict Top 5\"}\n        <span\n          style={{\n            display: 'inline-flex',\n            alignItems: 'center',\n            marginLeft: 8,\n            animation: hover && !loading ? `${chevronSlide} 0.3s ease` : undefined,\n            opacity: hover && !loading ? 1 : 0,\n            transition: 'opacity 0.2s',\n          }}\n        >\n          <ChevronRightIcon fontSize=\"medium\" />\n        </span>\n      </Button>\n    </form>\n  );\n};\n\nexport default PredictionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}