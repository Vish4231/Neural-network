{"ast":null,"code":"// src/api.ts\n\nconst DEFAULT_FEATURES = {\n  grid_position: 1,\n  qualifying_lap_time: 90,\n  air_temperature: 20,\n  humidity: 50,\n  rainfall: 0,\n  track_temperature: 25,\n  wind_speed: 5,\n  team_name: \"Red Bull Racing\",\n  driver_name: \"Max VERSTAPPEN\",\n  circuit: \"Melbourne\",\n  // will be overwritten\n  country_code: \"AUS\",\n  driver_form_last3: 5,\n  team_form_last3: 5,\n  qualifying_gap_to_pole: 0.5,\n  teammate_grid_delta: 0,\n  track_type: \"permanent\",\n  overtaking_difficulty: 3,\n  driver_championship_position: 1,\n  team_championship_position: 1,\n  driver_points_season: 100,\n  team_points_season: 200\n};\nexport async function getPrediction(formData) {\n  const features = {\n    ...DEFAULT_FEATURES,\n    circuit: formData.circuit\n  };\n  const response = await fetch(\"/predict\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      features\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Prediction request failed\");\n  }\n  return response.json();\n}","map":{"version":3,"names":["DEFAULT_FEATURES","grid_position","qualifying_lap_time","air_temperature","humidity","rainfall","track_temperature","wind_speed","team_name","driver_name","circuit","country_code","driver_form_last3","team_form_last3","qualifying_gap_to_pole","teammate_grid_delta","track_type","overtaking_difficulty","driver_championship_position","team_championship_position","driver_points_season","team_points_season","getPrediction","formData","features","response","fetch","method","headers","body","JSON","stringify","ok","Error","json"],"sources":["/Users/vishvasshiyam/Documents/Neural network/frontend/src/api.ts"],"sourcesContent":["// src/api.ts\n\nconst DEFAULT_FEATURES = {\n  grid_position: 1,\n  qualifying_lap_time: 90,\n  air_temperature: 20,\n  humidity: 50,\n  rainfall: 0,\n  track_temperature: 25,\n  wind_speed: 5,\n  team_name: \"Red Bull Racing\",\n  driver_name: \"Max VERSTAPPEN\",\n  circuit: \"Melbourne\", // will be overwritten\n  country_code: \"AUS\",\n  driver_form_last3: 5,\n  team_form_last3: 5,\n  qualifying_gap_to_pole: 0.5,\n  teammate_grid_delta: 0,\n  track_type: \"permanent\",\n  overtaking_difficulty: 3,\n  driver_championship_position: 1,\n  team_championship_position: 1,\n  driver_points_season: 100,\n  team_points_season: 200,\n};\n\nexport async function getPrediction(formData: { circuit: string }) {\n  const features = { ...DEFAULT_FEATURES, circuit: formData.circuit };\n  const response = await fetch(\"/predict\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ features }),\n  });\n  if (!response.ok) {\n    throw new Error(\"Prediction request failed\");\n  }\n  return response.json();\n} "],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAG;EACvBC,aAAa,EAAE,CAAC;EAChBC,mBAAmB,EAAE,EAAE;EACvBC,eAAe,EAAE,EAAE;EACnBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,CAAC;EACXC,iBAAiB,EAAE,EAAE;EACrBC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE,iBAAiB;EAC5BC,WAAW,EAAE,gBAAgB;EAC7BC,OAAO,EAAE,WAAW;EAAE;EACtBC,YAAY,EAAE,KAAK;EACnBC,iBAAiB,EAAE,CAAC;EACpBC,eAAe,EAAE,CAAC;EAClBC,sBAAsB,EAAE,GAAG;EAC3BC,mBAAmB,EAAE,CAAC;EACtBC,UAAU,EAAE,WAAW;EACvBC,qBAAqB,EAAE,CAAC;EACxBC,4BAA4B,EAAE,CAAC;EAC/BC,0BAA0B,EAAE,CAAC;EAC7BC,oBAAoB,EAAE,GAAG;EACzBC,kBAAkB,EAAE;AACtB,CAAC;AAED,OAAO,eAAeC,aAAaA,CAACC,QAA6B,EAAE;EACjE,MAAMC,QAAQ,GAAG;IAAE,GAAGxB,gBAAgB;IAAEU,OAAO,EAAEa,QAAQ,CAACb;EAAQ,CAAC;EACnE,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,EAAE;IACvCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAS,CAAC;EACnC,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}