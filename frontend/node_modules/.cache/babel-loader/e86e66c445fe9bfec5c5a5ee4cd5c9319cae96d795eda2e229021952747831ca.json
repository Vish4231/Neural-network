{"ast":null,"code":"var _jsxFileName = \"/Users/vishvasshiyam/Documents/Neural network/frontend/src/components/PredictionResultCard.tsx\";\nimport React from \"react\";\nimport { Card, CardContent, Typography, CircularProgress, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionResultCard = ({\n  loading,\n  error,\n  result\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: 200,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3,\n        border: \"2px solid #e10600\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          variant: \"h6\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  if (!result) return null;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mt: 3,\n      boxShadow: 6,\n      transition: \"0.3s\",\n      border: \"2px solid #e10600\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Predicted Top 5 Finishers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), result.top5 && Array.isArray(result.top5) ? result.top5.map((driver, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [idx + 1, \". \", driver]\n      }, driver, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No prediction data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), result.probabilities && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          children: \"Probabilities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), Object.entries(result.probabilities).map(([driver, prob]) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: [driver, \": \", (prob * 100).toFixed(1), \"%\"]\n        }, driver, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionResultCard;\nexport default PredictionResultCard;\nvar _c;\n$RefreshReg$(_c, \"PredictionResultCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","CircularProgress","Box","jsxDEV","_jsxDEV","PredictionResultCard","loading","error","result","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","border","color","variant","boxShadow","transition","gutterBottom","top5","Array","isArray","map","driver","idx","probabilities","Object","entries","prob","toFixed","_c","$RefreshReg$"],"sources":["/Users/vishvasshiyam/Documents/Neural network/frontend/src/components/PredictionResultCard.tsx"],"sourcesContent":["import React from \"react\";\nimport { Card, CardContent, Typography, CircularProgress, Box } from \"@mui/material\";\n\ninterface PredictionResultCardProps {\n  loading: boolean;\n  error?: string;\n  result?: any;\n}\n\nconst PredictionResultCard: React.FC<PredictionResultCardProps> = ({ loading, error, result }) => {\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight={200}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  if (error) {\n    return (\n      <Card sx={{ mt: 3, border: \"2px solid #e10600\" }}>\n        <CardContent>\n          <Typography color=\"error\" variant=\"h6\">{error}</Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n  if (!result) return null;\n  return (\n    <Card sx={{ mt: 3, boxShadow: 6, transition: \"0.3s\", border: \"2px solid #e10600\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Predicted Top 5 Finishers\n        </Typography>\n        {result.top5 && Array.isArray(result.top5) ? (\n          result.top5.map((driver: string, idx: number) => (\n            <Typography key={driver} variant=\"body1\">\n              {idx + 1}. {driver}\n            </Typography>\n          ))\n        ) : (\n          <Typography>No prediction data available.</Typography>\n        )}\n        {result.probabilities && (\n          <Box mt={2}>\n            <Typography variant=\"subtitle2\">Probabilities:</Typography>\n            {Object.entries(result.probabilities).map(([driver, prob]: [string, any]) => (\n              <Typography key={driver} variant=\"caption\">\n                {driver}: {(prob * 100).toFixed(1)}%\n              </Typography>\n            ))}\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PredictionResultCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}